#以下一般需要修改：日志打印位置
################## https://blog.csdn.net/Try_harder_every_day/article/details/78740767  #######################
#定义LOG输出级别（只是一个名字，下方规则中使用）
log4j.rootLogger=INFO,Console,debugFile,errorFile
# 捕获MyBatis日志
log4j.logger.com.yhw.dao=TRACE

### --------------  console ----------------###
# appender决定日志输出目的地 ：ConsoleAppender（控制台）FileAppender（文件）
log4j.appender.Console=org.apache.log4j.ConsoleAppender
#Target是ConsoleAppender的一个属性：默认值System.out,输出到控制台(err为红色,out为黑色)
log4j.appender.Console.Target=System.out
#threshold属性： 指定日志消息的输出最低层次
log4j.appender.Console.Threshold = WARN
# Layout：日志输出格式：PatternLayout可以灵活地指定日志输出格式，配合ConversionPattern指定具体的格式
log4j.appender.Console.layout = org.apache.log4j.PatternLayout
#log4j.appender.Console.layout.ConversionPattern=[%-5p] %d{yyyy-MM-dd HH:mm:ss,SSS} method:%l%n%m%n
log4j.appender.Console.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p]:%m   %x %n

### -------------  debugFile ----------------###
#文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.debugFile = org.apache.log4j.RollingFileAppender
#定义文件最大大小
log4j.appender.debugFile.MaxFileSize = 20MB
#指定输出目录
log4j.appender.debugFile.File = F://logs/member/debug.log
log4j.appender.debugFile.Threshold = debug
log4j.appender.debugFile.layout = org.apache.log4j.PatternLayout
log4j.appender.debugFile.layout.ConversionPattern =%d{yyyy-MM-dd HH:mm:ss:SSS} [method:%l]%n%m%n

### -------------  errorFile ----------------###
#此规则：一定时间生成一个文件（DatePattern 指定时间范围）
log4j.appender.errorFile = org.apache.log4j.DailyRollingFileAppender
log4j.appender.errorFile.Threshold = error
log4j.appender.errorFile.File = F://logs/member/error.log
log4j.appender.errorFile.DatePattern = '.'yyyy-MM-dd'.log'
# Append 默认值true,将消息追加到指定文件中，false指将消息覆盖指定的文件内容
log4j.appender.errorFile.Append=true
log4j.appender.errorFile.layout = org.apache.log4j.PatternLayout
log4j.appender.errorFile.layout.ConversionPattern =[%d{yyyy-MM-dd HH:mm:ss,SSS}]-[%p]:%m  %x %n